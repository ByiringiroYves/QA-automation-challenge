# .github/workflows/ci-pipeline.yml

name: CI/CD Test Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Root Dependencies
        run: npm install

      - name: Install Backend Dependencies
        run: npm install
        working-directory: ./node-backend

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./react-app

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start Backend API (for all tests)
        run: |
          # Set the port for the backend API
          export PORT=5000
          # Start the backend in the background, redirecting output to a log file
          # Use 'npm start' if defined in package.json, otherwise 'node server.js'
          npm start > backend.log 2>&1 &
          # Capture PID for potential debugging, though GitHub Actions cleans up
          echo "Backend PID: $!" > backend_pid.txt
          echo "Waiting for backend to start on port $PORT..."

          # Use a loop to check for server readiness with a timeout
          # Check a simple endpoint like '/' or '/health' if available, otherwise '/items'
          # This loop will retry for up to 60 seconds (12 retries * 5 seconds delay)
          for i in $(seq 1 12); do
            curl -s http://localhost:$PORT/items && break # Check if curl succeeds, then break
            echo "Attempt $i: Backend not ready, waiting 5 seconds..."
            sleep 5
          done

          # After the loop, check if the server is truly up
          curl -s http://localhost:$PORT/items || {
            echo "Backend not ready after multiple retries!"
            echo "--- Backend Log ---"
            cat backend.log # Print backend logs for debugging
            echo "-------------------"
            exit 1 # Fail the step if backend is not up
          }
          echo "Backend is ready."
        working-directory: ./node-backend
        env:
          PORT: 5000 # Ensure this matches the port your backend listens on

      - name: Run UI Tests
        run: npm run test:ui -- --update-snapshots 

      - name: Run API Tests
        run: npm run test:api

      # CODE COVERAGE ---
      - name: Generate Code Coverage Report
        run: npm run coverage
        if: always()

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage/
        if: always()

      - name: Upload Playwright Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: test-results/

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: playwright-report/
